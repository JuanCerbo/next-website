@use '../styles/variables.scss';
@use './styles/breakpoints.scss';
@use 'sass:math';

/*-------------------------------- Variables-----------------------*/

$full-width: 100%;
$half-width: 50%;
$third-width: math.div($full-width, 3);
$quarter-width: 25%;
$item-margins: 2%;
$container-margins: 1.5rem;
$grid-gap: 4%;
$full-item-width: $full-width - ($item-margins * 2);
$half-item-width: $half-width - ($item-margins * 2);
$third-item-width: $third-width - ($item-margins * 2);
$quarteritem-width: $quarter-width - ($item-margins * 2);

//grid system
$col3-hero: (math.div(8, 12) * 100%) - ($item-margins * 2);
$ten-12: (math.div(10, 12) * 100%) - ($item-margins * 2);

//container sizes (not working for some reason in queries)
$med-container: 343px;
$lg-container: 637px;
$xl-container: 775px;

//text
$xss-txt: 0.8125em;
$xs-txt: 0.875em;
$sm-txt: 1.0625em;
$md-txt: 1.5em;
$lg-txt: 2.25em;

/*-------------------------------- Mixins-----------------------*/

@mixin useFlex {
    display: flex;
    flex-direction: column;
    align-items: center;
}

@mixin grid {
    /*     grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(100px, auto); */

    @include breakpoints.sm-min {
        .wrapper {
            display: grid;
            gap: $grid-gap;
            grid-auto-rows: minmax(100px, auto);
        }

        .item {
            width: 100%;
        }

        &.col_3 .wrapper,
        &.col_4 .wrapper {
            grid-template-columns: repeat(2, 1fr);
        }

        &.col_4 .hero {
            grid-column: span 2;
        }

        @include breakpoints.md-min {
            .hero {
                grid-column: span 2;
            }

            &.col_2 .wrapper,
            &.col_4 .wrapper {
                grid-template-columns: repeat(2, 1fr);
            }

            &.col_3 .wrapper {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        @container module (min-width:1025px) {
            &.col_4 .wrapper {
                grid-template-columns: repeat(4, 1fr);
            }
        }
    }
}

@mixin flex-mod {
    display: -moz-flex;
    display: flex;
    flex-wrap: wrap;

    .wrapper {
        display: -moz-flex;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
    }

    .item {
        display: -moz-flex;
        display: flex;
        flex: 0 1 auto;
        align-self: stretch;
        -ms-flex-item-align: stretch;
        flex: 0 1 auto;
        align-self: stretch;
        flex-direction: column;
        margin-bottom: 2rem;
    }
}

@mixin text-sizes {
    .font_xs {
        font-size: 62.5%;
    }

    .font_sm {
        font-size: 75%;
    }

    .font_md {
        font-size: 87.5%;
    }

    .font_lg {
        font-size: 112.5%;
    }

    .font_xl {
        font-size: 125%;
    }
}

@mixin item_flex {
    @include breakpoints.sm-min {
        &.col_2,
        &.col_3,
        &.col_4 {
            .item {
                margin-left: $item-margins;
                margin-right: $item-margins;
            }
        }

        &.col_1 .item,
        &.col_2 .item {
            width: $ten-12;
            margin-left: auto;
            margin-right: auto;
        }

        &.col_3 .item {
            width: $half-item-width;
        }

        &.col_4 .item {
            width: $half-item-width;
        }
    }

    @include breakpoints.md-min {
        &.col_2 .item,
        &.col_4 .item {
            width: $half-item-width;
        }

        &.col_3 .item {
            width: $third-item-width;
        }

        &.a1,
        &.a2,
        &.a3 {
            &.col_2 .hero {
                width: $full-item-width;
            }

            &.col_3 .hero {
                width: $col3-hero;
            }

            &.col_4 .hero {
                width: $half-item-width;
            }
        }
    }

    @container module (min-width:1025px) {
        &.col_3 .nHero,
        &.beacon.col_3 .item {
            width: $third-item-width;
        }

        &.col_4 .nHero,
        &.beacon.col_4 .item {
            width: $quarteritem-width;
        }
    }
}

/* @mixin photoFlex {
    @include breakpoints.sm-min {
        &.col_2,
        &.col_3,
        &.col_4 {
            .item {
                margin-left: $item-margins;
                margin-right: $item-margins;
            }
        }

        &.col_1 .item,
        &.col_2 .item {
            width: 100%;
            margin-left: auto;
            margin-right: auto;
        }

        &.col_3 .item {
            width: $half-item-width;
        }

        &.col_4 .item {
            width: $half-item-width;
        }
    }

    @include breakpoints.md-min {
        &.col_2 .item,
        &.col_4 .item {
            width: $half-item-width;
        }

        &.col_3 .item {
            width: $third-item-width;
        }

        &.col_2 .hero {
            width: $full-item-width;
        }

        &.col_3 .hero {
            width: $col3-hero;
        }

        &.col_4 .hero {
            width: $half-item-width;
        }
    }

    @container module (min-width:1025px) {
        &.col_3 .nHero,
        &.beacon.col_3 .item {
            width: $third-item-width;
        }

        &.col_4 .nHero,
        &.beacon.col_4 .item {
            width: $quarteritem-width;
        }
    }
} */

$root-bottom-margin: 30px;
@mixin root {
    width: 100%;
    margin-bottom: $root-bottom-margin;
}

//mixin for cropping space from top of text

@mixin lhCrop($line-height) {
    &::before {
        content: '';
        display: block;
        height: 0;
        width: 0;
        margin-top: calc((1 - #{$line-height}) * 0.8em);
    }
}

@mixin cta_btn {
    a {
        font-weight: bold;
        //text-transform: uppercase;
        letter-spacing: 1.5px;

        &:after {
            padding: 10px;
            content: '>';
            /* color: variables.$linkColor; */
        }
    }
}
/*Font size mixins */

/*-----------CMS-------------------*/

@mixin sm-text-sizes {
    font-size: $sm-txt;
    margin-top: 0.7058823529em;
    margin-bottom: 0.4705882353em;
    line-height: 1.1764705882em;
}

@mixin xs-text-sizes {
    font-size: $xs-txt;
    margin-top: 0.5714285714em;
    margin-bottom: 0.5714285714em;
    line-height: 1.1428571429em;
}
@mixin md-text-sizes {
    font-size: $md-txt;
    margin-top: 0.6666666667em;
    margin-bottom: 0.5em;
    line-height: 1.1666666667em;
    letter-spacing: -0.0125rem;
}
@mixin lg-text-sizes {
    font-size: $lg-txt;
    margin-top: 0.6666666667em;
    margin-bottom: 0.4444444444em;
    line-height: 1.1111111111em;
    letter-spacing: -0.0125rem;
}

/*-----------------------------------------------*/

@mixin text-sizes-sm {
    font-size: variables.$text-size-body-xsm;

    @include breakpoints.md {
        font-size: variables.$text-size-body-sm;
    }
}
@mixin text-sizes-md {
    font-size: variables.$text-size-body-xsm;

    @include breakpoints.md {
        font-size: variables.$text-size-body-sm;
    }
    @include breakpoints.lg {
        font-size: variables.$text-size-body-md;
    }
}
@mixin text-sizes-lg {
    font-size: variables.$text-size-body-xsm;

    @include breakpoints.md {
        font-size: variables.$text-size-body-md;
    }
    @include breakpoints.lg {
        font-size: variables.$text-size-body-lg;
    }
}

/*-------------------------------*/

@mixin headline-sizes-sm {
    font-weight: bold;
    font-size: variables.$text-size-head-sm;

    @include breakpoints.xl {
        font-size: variables.$text-size-head-md;
    }
}

@mixin headline-sizes-md {
    font-weight: bold;
    font-size: variables.$text-size-head-sm;

    @include breakpoints.md {
        font-size: variables.$text-size-head-sm;
    }

    @include breakpoints.lg {
        font-size: variables.$text-size-head-md;
    }
}

@mixin headline-sizes-lg {
    font-weight: bold;
    font-size: variables.$text-size-head-sm;

    @include breakpoints.md {
        font-size: variables.$text-size-head-md;
    }
    @include breakpoints.lg {
        font-size: variables.$text-size-head-lg;
    }
}

/*-----------------------------------*/
