@use '../styles/utils.module.scss';
@use './styles/breakpoints.scss';
@use '../styles/variables.scss';
@use 'sass:math';
//Variables
$lh-height: 1.3;
$margin-text: 20px;
$ratio: math.div(4, 3);

//Setting image sizes
$image-width-percentage: 25%;
$image-width-decimal: 0.25;
$image-width: #{$image-width-decimal * 100}vw;
$image-height: $image-width / $ratio;

//Image and content size calculations
$img-height-max: math.div($image-width-decimal * variables.$max-main-width, $ratio);
$max-main-image-width: variables.$max-main-width * $image-width-decimal;
$max-main-content-width: variables.$max-main-width * (1 - $image-width-decimal);

/*Mixins Shared between layouts */

@mixin cta_btn {
    margin-top: $margin-text;

    a {
        font-weight: bold;

        &:after {
            padding: 10px;
            content: '>';
            color: variables.$link-color;
        }
    }
}

@mixin features {
    display: flex;
    flex-direction: column;
    @include breakpoints.md {
        flex-direction: row;
    }
}

@mixin bordered {
    background-color: black;

    * {
        color: #fff;
    }
}

@mixin article {
    .wrapper {
        max-width: variables.$max-main-width;
        margin: 15px auto;
        width: 100%;

        @include breakpoints.sm {
            width: variables.$content-width;
        }

        .features {
            //padding: 30px;
            //padding: variables.$gap;
            width: 100%;
            @include features;
            box-sizing: border-box;
            align-items: center;

            .imageBlock {
                position: relative;
                width: 100%;
                max-width: 100%;
                height: 100%;
                align-self: flex-start;
                display: none;

                img {
                    width: 100%;
                }
                @include breakpoints.md {
                    width: 50%;
                    height: auto;
                }
            }

            .allText {
                align-self: flex-start;
                display: flex;
                flex-direction: column;
                color: variables.$text-color-main;
                padding: 20px;

                @include breakpoints.sm {
                    padding: 0;
                }
                /* 
                @media (min-width: breakpoints.$screen-sm-min) and (max-width: breakpoints.$screen-md-min) {
                    padding: 0;
                } */

                .title {
                    margin-bottom: $margin-text;
                    line-height: $lh-height;

                    .text {
                        line-height: $lh-height;
                        @include utils.lhCrop($lh-height);
                        margin-top: 30px;

                        @include breakpoints.md {
                            margin-top: 0;
                        }
                    }
                }

                .textBlock {
                    margin-right: $margin-text;
                }

                .cta_btn {
                    @include cta_btn;
                }
            }
        }
        &.bordered {
            @include bordered;

            .features {
                padding: variables.$gap;
                //padding: 0 10px;
                padding: 20px;

                .allText {
                    // padding: variables.$gap;
                }

                .textBlock {
                    @include breakpoints.md {
                        margin: 0 $margin-text;
                    }
                }
                .title {
                    @include breakpoints.md {
                        margin-left: $margin-text;
                    }
                }
            }
        }

        &.imageArticle {
            .imageBlock {
                display: block;
            }

            .allText {
                //text-align: left;
                justify-content: flex-start;
                @include breakpoints.md {
                    width: 50%;
                }
            }
        }

        &.reverse .features {
            @include breakpoints.md {
                flex-direction: row-reverse;
            }
        }
    }
}

/*-----------------------------CARD----------------------*/

@mixin card {
    .wrapper {
        @include breakpoints.sm {
            width: variables.$content-width;
            margin: 0 auto;
        }
        @include breakpoints.md {
            width: 100%;
        }

        .title {
            @include breakpoints.md {
                display: flex;
                flex-direction: row;
                margin-top: 20px;
                margin-bottom: 10px;
            }

            .textGutter {
                flex: 10 0 0;
            }

            .insideTextGutter {
                flex: 20 0 0;
                max-width: $max-main-image-width;
            }

            .titleText {
                display: flex;
                align-self: flex-start;

                @include breakpoints.md {
                    align-self: flex-start;
                    flex: 60 0 0;
                    max-width: $max-main-content-width;
                }

                .text {
                    color: variables.$text-color-main;
                    padding-left: 20px;
                    width: 100%;
                    padding: 10px 0 10px 20px;

                    @include breakpoints.md {
                        margin-left: auto;
                        //padding: 0px 0px 0px 20px;
                        flex: 60 0 0;
                    }

                    /*                     @include breakpoints.sm {
                        padding: 10px 0 10px 0;
                    }

                    @include breakpoints.md {
                        padding-left: 20px;
                    } */

                    @media (min-width: breakpoints.$screen-sm-min) and (max-width: breakpoints.$screen-md-min) {
                        padding: 10px 0 10px 0;
                    }
                }
            }
        }
        .features {
            @include features;

            .colorBlock {
                flex: 10 0 0;
                display: none;

                @include breakpoints.md {
                    display: block;
                }

                .colorFill {
                    background-color: variables.$main-color;
                    aspect-ratio: math.div($ratio, 2);
                    height: $image-height;
                }
            }

            .imageBlock {
                @include breakpoints.md {
                    flex: 20 0 0;
                    background-color: variables.$main-color;
                    align-self: flex-start;
                    max-width: $max-main-image-width;
                    width: $image-width;
                }
                .blockPicture {
                    width: 100%;
                    position: relative;

                    @include breakpoints.md {
                        aspect-ratio: $ratio;
                    }

                    img {
                        width: 100% !important;
                        object-fit: cover;

                        @include breakpoints.md {
                            position: absolute;
                            top: 0;
                            left: 0;
                            height: 100%;
                            width: 100%;
                        }
                    }
                }
            }

            .textBlock {
                display: flex;
                flex-direction: column;
                justify-content: flex-start;
                max-width: $max-main-content-width;

                @include breakpoints.md {
                    flex: 60 0 0;
                    position: relative;
                }

                .text {
                    padding-top: 0;
                    padding: 20px;
                    @include breakpoints.md {
                        line-height: $lh-height;
                        @include utils.lhCrop($lh-height);
                        padding: 0;
                        padding-left: 20px;
                    }
                }

                .cta_btn {
                    @include cta_btn;
                    color: variables.$text-color-main;
                    padding-left: 20px;
                    @include breakpoints.md {
                        margin-left: 20px;
                        padding: 0;
                    }
                }
            }
        }

        &.bordered .textBlock {
            @include bordered;

            .text {
                padding: 20px;
            }
            .cta_btn {
                padding-bottom: 20px;
            }
        }

        &.reverse .features,
        &.reverse .title {
            @include breakpoints.md {
                flex-direction: row-reverse;
            }
        }

        //Unsetting aspect-ratio and changing height to account for 1200px max-width
        @include breakpoints.custom(math.div(variables.$max-main-width, math.div(variables.$content-width, 100%))) {
            .features .colorBlock .colorFill {
                height: $img-height-max;
                aspect-ratio: auto;
            }
        }
    }

    //Card items reverse order on every even number
    &:nth-child(even) {
        @include breakpoints.md {
            .title {
                flex-direction: row-reverse;
            }

            .titleText .text,
            .textBlock .text {
                padding-left: 0 !important;
                padding-right: 20px !important;
            }
        }
    }

    &:nth-child(even) .features {
        @include breakpoints.md {
            flex-direction: row-reverse;
        }
    }
}

.root {
    @include utils.root;

    &.articleLayout {
        @include article;
    }

    &.cardLayout {
        @include card;
    }

    &.left {
        .textBlock .text,
        .titleText .text,
        .title .text,
        .allText,
        .cta_btn {
            text-align: left;
        }
    }

    &.right {
        .textBlock .text,
        .titleText .text,
        .title .text,
        .allText,
        .cta_btn {
            text-align: right;
        }
    }

    &.center {
        .textBlock .text,
        .titleText .text,
        .title .text,
        .allText,
        .cta_btn {
            text-align: center;
        }
    }

    &.sm {
        .textBlock .text,
        .cta_btn {
            @include utils.text-sizes-sm;
        }

        .titleText .text,
        .title .text {
            @include utils.headline-sizes-sm;
        }
    }
    &.md {
        .textBlock .text,
        .cta_btn {
            @include utils.text-sizes-md;
        }

        .titleText .text,
        .title .text {
            @include utils.headline-sizes-md;
        }
    }
    &.lg {
        .textBlock .text,
        .cta_btn {
            @include utils.text-sizes-lg;
        }

        .titleText .text,
        .title .text {
            @include utils.headline-sizes-lg;
        }
    }
}
